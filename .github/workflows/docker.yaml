name: Docker

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestbranchestags
on:
  push:
    branches:
      - "**"
    tags:
      - 'v*.*.*'
    pull_request:

jobs:
  compile:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE: ghcr.io/swaglive/ffmpeg

    strategy:
      fail-fast: false
      matrix:
        version:
        - "4.2.2-nvidia9.0"
        - "4.2.2-nvidia9.1"
        - "4.2.3-nvidia9.1"
        - "4.2.3-nvidia10.0"
        - "4.3.0-nvidia9.1"
        - "4.3.0-nvidia10.0"

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Load Environment
      id: load-env
      run: |
        echo ::set-output name=version::${{ matrix.version }}
        echo ::set-output name=tags::${DOCKER_IMAGE}:${{ matrix.version }}
        echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

    - name: Load Environment - Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: bot-swag
        password: ${{ secrets.CR_PAT }}

    # - name: Load Environment - Login to DockerHub
    #   uses: docker/login-action@v1
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Load Dependencies - Build Cache
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Load Dependencies - Setup buildx
      uses: docker/setup-buildx-action@v1

    - name: Build
      uses: docker/build-push-action@v2
      with:
        file: ${{ matrix.version }}/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.load-env.outputs.tags }}
        # cache-from: type=local,src=/tmp/.buildx-cache
        # cache-to: type=local,dest=/tmp/.buildx-cache
        labels: |
          org.opencontainers.image.title=${{ github.event.repository.name }}
          org.opencontainers.image.description=${{ github.event.repository.description }}
          org.opencontainers.image.url=${{ github.event.repository.html_url }}
          org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          org.opencontainers.image.version=${{ steps.load-env.outputs.version }}
          org.opencontainers.image.created=${{ steps.load-env.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
